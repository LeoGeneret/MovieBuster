{"version":3,"sources":["Header.js","Questions.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","role","aria-label","React","Component","Questions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","lebouton","createRef","onSubmit","id","type","name","value","onChange","onChangeGenre","htmlFor","onChangePays","onChangeEpoque","form","ref","App","handleChange","e","setState","genre","target","handleSubmit","preventDefault","genreNumber","state","pays","epoque","fetch","then","results","json","data","filmsResults","map","films","href","rel","key","src","poster_path","alt","title","vote_average","console","log","_this2","src_Header","src_Questions","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8NAYeA,0LARP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,eAAiCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQC,KAAK,MAAMC,aAAW,SAA9C,yBAJxBC,IAAMC,YC4IZC,cA3Ib,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,SAAWX,IAAMY,YAFNR,wEAKhB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMiB,SAAUN,KAAKJ,MAAMU,SAAUC,GAAG,cACtCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHE,KAAK,QACLC,MAAM,KACNC,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,WAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,KACND,KAAK,QACLE,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,SAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLE,MAAM,KACND,KAAK,QACLF,GAAG,YACHI,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,UAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLE,MAAM,QACND,KAAK,QACLF,GAAG,YACHI,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,WAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLE,MAAM,QACND,KAAK,QACLF,GAAG,YACHI,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,cAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLE,MAAM,KACND,KAAK,QACLF,GAAG,YACHI,SAAUX,KAAKJ,MAAMgB,gBAEvBzB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,kBAIJ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,KACND,KAAK,OACLE,SAAUX,KAAKJ,MAAMkB,eAEvB3B,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,gBAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,MACND,KAAK,OACLE,SAAUX,KAAKJ,MAAMkB,eAEvB3B,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,gBAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,GACND,KAAK,OACLE,SAAUX,KAAKJ,MAAMkB,eAEvB3B,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,iBAIJ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,uEACND,KAAK,SACLE,SAAUX,KAAKJ,MAAMmB,iBAEvB5B,EAAAC,EAAAC,cAAA,SAAOkB,GAAG,SAASM,QAAQ,aAA3B,qBAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,uEACND,KAAK,SACLE,SAAUX,KAAKJ,MAAMmB,iBAEvB5B,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,iBAEA1B,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLD,GAAG,YACHG,MAAM,GACND,KAAK,SACLE,SAAUX,KAAKJ,MAAMmB,iBAEvB5B,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,aAAf,+BAIN1B,EAAAC,EAAAC,cAAA,UAAQkB,GAAG,UAASC,KAAK,SAASQ,KAAK,aAAaC,IAAKjB,KAAKI,UAA9D,kCApIgBX,IAAMC,WC+EfwB,cA3Eb,SAAAA,IAAc,IAAArB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACZrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,QASFmB,aAAe,SAAAC,GACbvB,EAAKwB,SAAS,CACZC,MAAOF,EAAEG,OAAOb,SAZNb,EAgBd2B,aAAe,SAAAJ,GACbA,EAAEK,iBACF,IAAIC,EAAc7B,EAAK8B,MAAML,MACzBM,EAAO/B,EAAK8B,MAAMC,KAClBC,EAAShC,EAAK8B,MAAME,OAGxBC,MACE,2IACEJ,EACA,qBACAE,EACAC,GAEDE,KAAK,SAAAC,GACJ,OAAOA,EAAQC,SAEhBF,KAAK,SAAAG,GACJ,IAAIC,EAAeD,EAAKF,QAAQI,IAAI,SAAAC,GAClC,OACElD,EAAAC,EAAAC,cAAA,KAAGiD,KAdG,oCAcaD,EAAM9B,GAAIgB,OAAO,SAASgB,IAAI,uBACjDpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAakD,IAAKH,EAAML,SACrC7C,EAAAC,EAAAC,cAAA,OAAKoD,IAjBA,kCAiBgBJ,EAAMK,YAAaC,IAAI,KAC5CxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAIgD,EAAMO,OACVzD,EAAAC,EAAAC,cAAA,SAAIgD,EAAMQ,oBAQpBhD,EAAKwB,SAAS,CACZc,aAAcA,IAEhBW,QAAQC,IAAI,QAASlD,EAAK8B,MAAMQ,iBAnDpCtC,EAAK8B,MAAQ,CACXL,MAAO,GACPM,KAAM,GACNC,OAAQ,GACRM,aAAc,IANJtC,wEAyDL,IAAAmD,EAAAhD,KACP,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,CACE5D,UAAU,YACVgB,SAAUN,KAAKwB,aACfZ,cAAe,SAAAQ,GAAC,OAAI4B,EAAK3B,SAAS,CAAEC,MAAOF,EAAEG,OAAOb,SACpDI,aAAc,SAAAM,GAAC,OAAI4B,EAAK3B,SAAS,CAAEO,KAAMR,EAAEG,OAAOb,SAClDK,eAAgB,SAAAK,GAAC,OAAI4B,EAAK3B,SAAS,CAAEQ,OAAQT,EAAEG,OAAOb,WAGxDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBU,KAAK2B,MAAMQ,sBAtEnC1C,IAAMC,WCOJyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,KAAK,SAAAiC,GACjCA,EAAaC","file":"static/js/main.7c68691c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n            <h1 className=\"logo\">MovieBuster <span className=\"emoji\" role=\"img\" aria-label=\"glass\">üîç</span></h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.lebouton = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"questions\">\r\n        <form onSubmit={this.props.onSubmit} id=\"formulaire\">\r\n          <div className=\"question1\">\r\n            <h1>Un film de quel genre ?</h1>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q1option1\"\r\n                name=\"genre\"\r\n                value=\"35\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option1\">Comedie</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q1option2\"\r\n                value=\"18\"\r\n                name=\"genre\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option2\">Drame</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                value=\"28\"\r\n                name=\"genre\"\r\n                id=\"q1option3\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option3\">Action</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                value=\"10751\"\r\n                name=\"genre\"\r\n                id=\"q1option4\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option4\">Famille</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                value=\"10749\"\r\n                name=\"genre\"\r\n                id=\"q1option5\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option5\">Romantique</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                value=\"99\"\r\n                name=\"genre\"\r\n                id=\"q1option6\"\r\n                onChange={this.props.onChangeGenre}\r\n              />\r\n              <label htmlFor=\"q1option6\">Documentaire</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question2\">\r\n            <h1>Qui dure combien de temps ?</h1>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q2option1\"\r\n                value=\"90\"\r\n                name=\"pays\"\r\n                onChange={this.props.onChangePays}\r\n              />\r\n              <label htmlFor=\"q2option1\">1h30 maximum</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q2option2\"\r\n                value=\"150\"\r\n                name=\"pays\"\r\n                onChange={this.props.onChangePays}\r\n              />\r\n              <label htmlFor=\"q2option2\">2h30 maximum</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q2option3\"\r\n                value=\"\"\r\n                name=\"pays\"\r\n                onChange={this.props.onChangePays}\r\n              />\r\n              <label htmlFor=\"q2option3\">Peu importe</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question3\">\r\n            <h1>De quelle √©poque ?</h1>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q3option1\"\r\n                value=\"&primary_release_date.gte=2000-1-1&primary_release_date.lte=2100-1-1\"\r\n                name=\"Epoque\"\r\n                onChange={this.props.onChangeEpoque}\r\n              />\r\n              <label id=\"comedy\" htmlFor=\"q3option1\">Un film r√©cent</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q3option2\"\r\n                value=\"&primary_release_date.gte=1980-1-1&primary_release_date.lte=2000-1-1\"\r\n                name=\"Epoque\"\r\n                onChange={this.props.onChangeEpoque}\r\n              />\r\n              <label htmlFor=\"q3option2\">Un vieux film</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                id=\"q3option3\"\r\n                value=\"\"\r\n                name=\"Epoque\"\r\n                onChange={this.props.onChangeEpoque}\r\n              />\r\n              <label htmlFor=\"q3option3\">J'ai du mal √† choisir</label>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <button id=\"submit \"type=\"submit\" form=\"formulaire\" ref={this.lebouton}>\r\n          Trouver un film ‚Üì\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header.js\";\nimport Questions from \"./Questions\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      genre: \"\",\n      pays: \"\",\n      epoque: \"\",\n      filmsResults: []\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      genre: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    var genreNumber = this.state.genre;\n    var pays = this.state.pays;\n    var epoque = this.state.epoque;\n    var imageURL = \"http://image.tmdb.org/t/p/w500/\";\n    var filmURL = \"https://www.themoviedb.org/movie/\"\n    fetch(\n      \"https://api.themoviedb.org/3/discover/movie?api_key=00d3862837b278c00036b0c34b9be79d&language=fr-FR&sort_by=popularity.desc&with_genres=\" +\n        genreNumber +\n        \"&with_runtime.lte=\" +\n        pays +\n        epoque\n    )\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        let filmsResults = data.results.map(films => {\n          return (\n            <a href={filmURL + films.id} target=\"_blank\" rel=\"noopener noreferrer\">\n            <div className=\"cardresult\" key={films.results}>\n              <img src={imageURL + films.poster_path} alt=\"\" />\n              <div className=\"filmInfos\">\n                <div className=\"cardheader\">\n                  <p>{films.title}</p> \n                  <p>{films.vote_average}</p>\n                </div>\n                \n              </div>\n            </div>\n            </a>\n          );\n        });\n        this.setState({\n          filmsResults: filmsResults\n        });\n        console.log(\"state\", this.state.filmsResults);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Questions\n          className=\"questions\"\n          onSubmit={this.handleSubmit}\n          onChangeGenre={e => this.setState({ genre: e.target.value })}\n          onChangePays={e => this.setState({ pays: e.target.value })}\n          onChangeEpoque={e => this.setState({ epoque: e.target.value })}\n        />\n\n        <div className=\"resultcontainer\">{this.state.filmsResults}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'reset-css'; \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}